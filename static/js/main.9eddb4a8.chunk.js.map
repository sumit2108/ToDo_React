{"version":3,"sources":["components/Form.js","components/Todo.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","todos","setinputText","setTodos","inputText","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","e1","Todolist","filteredTodos","App","useState","status","setFilterTodos","useEffect","filterHandler","getLocalTodo","setLocalTodo","localStorage","setItem","JSON","stringify","getItem","localTodo","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9eddb4a8.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\n\r\nconst Form =({todos,setinputText, setTodos, inputText ,setStatus, })=>{\r\n     \r\n     const inputTextHandler=(e)=>{\r\n         console.log(e.target.value)\r\n         setinputText(e.target.value)\r\n     }\r\n\r\n     const submitTodoHandler =(e)=>{\r\n         e.preventDefault();\r\n         setTodos([\r\n             ...todos,{ text:inputText, completed:false, id :Math.random()*1000}\r\n         ]);\r\n         setinputText(\"\")\r\n         \r\n     }\r\n\r\n     const statusHandler=(e)=>{\r\n         setStatus(e.target.value);\r\n     }\r\n     \r\n      \r\n    return(\r\n        <form>\r\n            \r\n         <input \r\n         value={inputText} \r\n         onChange ={inputTextHandler} \r\n         type=\"text\" \r\n         className=\"todo-input\"\r\n         />\r\n         <button onClick={submitTodoHandler} className=\"todo-button\" type =\"submit\" >\r\n             <i className=\"fas fa-plus-square\"></i>\r\n         </button>\r\n         <div className=\"select\">\r\n        \r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n\r\n         </div>\r\n        \r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction Todo ({text,todo,todos, setTodos}){\r\n    const deleteHandler =()=>{\r\n        setTodos(todos.filter((e1)=>e1.id!==todo.id))\r\n    }\r\n    const completeHandler =()=>{\r\n        setTodos(todos.map((item)=>{\r\n            if(item.id===todo.id){\r\n                return{\r\n                    ...item, completed:!item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return(\r\n     <div className=\"todo\">\r\n         <li className={`todo-item ${todo.completed?\"completed\":\"\"}`}>{text}</li>\r\n         <button onClick={completeHandler}  className=\"complete-btn\">\r\n             <i className=\"fas fa-check\"></i>\r\n         </button>\r\n         <button onClick={deleteHandler} className=\"trash-btn\">\r\n             <i className=\"fas fa-trash\"></i>\r\n         </button>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nfunction Todolist( {todos,setTodos,filteredTodos}){\r\n     \r\n    \r\n    return(\r\n        <div className=\"todo-container\">            \r\n            <ul className=\"todo-list\">\r\n                {filteredTodos.map(todo=>(<Todo todos={todos} todo={todo} setTodos={setTodos} key={todo.id} text={todo.text} />))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist;","import React, {  useState,useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Todolist from './components/todolist';\n\nfunction App(){\n\n\n\n const [inputText,setinputText]=useState(\"\");\n const[todos,setTodos]=useState([]);\n const[status,setStatus]=useState(\"all\")\n const[filteredTodos,setFilterTodos]=useState([]);\n\n //useEffect\n useEffect(()=>{\nfilterHandler();\n\n },[todos,status])\n\n useEffect(()=>{\ngetLocalTodo();\n },[])\n\n useEffect(()=>{\n  setLocalTodo();\n   },[todos])\n\n //events\n\n const filterHandler=()=>{\n   switch(status){\n     case 'completed':\n       setFilterTodos(todos.filter((todo)=> todo.completed===true));\n         break;\n     case 'uncompleted':\n       setFilterTodos(todos.filter((todo)=> todo.completed===false));\n       break;\n       default :\n       setFilterTodos(todos)\n       break;\n   }\n }\n\n\n //save to Localstorage\n\n const setLocalTodo=()=>{\n    localStorage.setItem('todos',JSON.stringify(todos))\n };\n const getLocalTodo=()=>{\n  if(localStorage.getItem('todos')===null){\n    localStorage.setItem('todos',JSON.stringify([]))\n  }else{\n   let localTodo=JSON.parse(localStorage.getItem('todos'))\n   setTodos(localTodo)\n  }\n}\n  return (\n    <>\n    <header>Sumit's Todo React App </header>\n    \n    <Form todos={todos} \n    inputText={inputText}\n    setTodos={setTodos} \n    setinputText={setinputText}\n    setStatus={setStatus}\n    status={status} \n    />\n   <Todolist \n   todos={todos} \n   inputText={inputText} \n   setTodos={setTodos}\n   filteredTodos={filteredTodos}/>\n   </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}